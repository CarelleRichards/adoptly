// <auto-generated />
using System;
using Adoptly.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adoptly.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Adoptly.Web.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Address2")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Application", b =>
                {
                    b.Property<string>("AdopterUsername")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("AdoptionReason")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateProcessed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Visited")
                        .HasColumnType("bit");

                    b.HasKey("AdopterUsername", "PetId");

                    b.HasIndex("AddressId");

                    b.HasIndex("PetId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateVerified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(94)
                        .HasColumnType("nvarchar(94)");

                    b.Property<string>("VerificationToken")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Match", b =>
                {
                    b.Property<string>("AdopterUsername")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateMatched")
                        .HasColumnType("datetime2");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("AdopterUsername", "PetId");

                    b.HasIndex("PetId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityLevel")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<double>("Age")
                        .HasColumnType("float");

                    b.Property<bool>("AllergyFriendly")
                        .HasColumnType("bit");

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Budget")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Desexed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FirstListed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Independence")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ShelterUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("StatusLastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShelterUsername");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Quiz", b =>
                {
                    b.Property<string>("AdopterUsername")
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Answer1")
                        .HasColumnType("int");

                    b.Property<int>("Answer2")
                        .HasColumnType("int");

                    b.Property<int>("Answer3")
                        .HasColumnType("int");

                    b.Property<int>("Answer4")
                        .HasColumnType("int");

                    b.Property<int>("Answer5")
                        .HasColumnType("int");

                    b.HasKey("AdopterUsername");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("Adoptly.Web.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("LoginId")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Username");

                    b.HasIndex("LoginId")
                        .IsUnique();

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Adoptly.Web.Models.Admin", b =>
                {
                    b.HasBaseType("Adoptly.Web.Models.User");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("Admins", (string)null);
                });

            modelBuilder.Entity("Adoptly.Web.Models.Adopter", b =>
                {
                    b.HasBaseType("Adoptly.Web.Models.User");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("State")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.ToTable("Adopters", (string)null);
                });

            modelBuilder.Entity("Adoptly.Web.Models.Shelter", b =>
                {
                    b.HasBaseType("Adoptly.Web.Models.User");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.ToTable("Shelters", (string)null);
                });

            modelBuilder.Entity("Adoptly.Web.Models.Application", b =>
                {
                    b.HasOne("Adoptly.Web.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Adoptly.Web.Models.Adopter", "Adopter")
                        .WithMany("Applications")
                        .HasForeignKey("AdopterUsername")
                        .IsRequired();

                    b.HasOne("Adoptly.Web.Models.Pet", "Pet")
                        .WithMany("Applications")
                        .HasForeignKey("PetId")
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Adopter");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Match", b =>
                {
                    b.HasOne("Adoptly.Web.Models.Adopter", "Adopter")
                        .WithMany("Matches")
                        .HasForeignKey("AdopterUsername")
                        .IsRequired();

                    b.HasOne("Adoptly.Web.Models.Pet", "Pet")
                        .WithMany("Matches")
                        .HasForeignKey("PetId")
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Pet", b =>
                {
                    b.HasOne("Adoptly.Web.Models.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Quiz", b =>
                {
                    b.HasOne("Adoptly.Web.Models.Adopter", "Adopter")
                        .WithOne("Quiz")
                        .HasForeignKey("Adoptly.Web.Models.Quiz", "AdopterUsername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");
                });

            modelBuilder.Entity("Adoptly.Web.Models.User", b =>
                {
                    b.HasOne("Adoptly.Web.Models.Login", "Login")
                        .WithOne("User")
                        .HasForeignKey("Adoptly.Web.Models.User", "LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Login", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Pet", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Matches");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Adopter", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Matches");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Adoptly.Web.Models.Shelter", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
